
name: Infrastructure main workflow

run-name: '${{ github.actor }} triggered Infrastructure workflow'

on:
    push:
        branches:
             - main 
             - integration
             - staging
             - production
    pull_request: 
        branches: 
            - integration
            - staging
            - production
        paths: 
            - infrastructure/**.tf

jobs:

    infrastructure_ci:
        if: github.event_name == 'push' && github.ref_name == 'main'
        uses: ./.github/workflows/infrastructure_ci.yaml

    forbid_pull_request_to_env_branches_from_other_branch_than_main:
        if: github.event_name == 'pull_request'
        runs-on: ubuntu-22.04
        steps:
            - name: Forbid random branches to merge into env branches 
              id: not_allowed_source_branch
              run: |-
                [ "${{ github.head_ref }}" != "main" ] && exit 1


    infrastructure_plan:
        if: github.event_name == 'pull_request'
        needs: [guess_env]
        uses: ./.github/workflows/infrastructure_plan.yaml
        permissions: 
            pull-requests: 
                write
        with:
            targeted_environment: './infrastructure/${{ needs.guess_env.outputs.environment }}'   

    guess_env:
        if: github.event_name == 'push' && contains(fromJSON('["integration", "staging", "production"]'), github.ref_name)
        runs-on: ubuntu-22.04
        outputs:
            environment: ${{ steps.guess_env.outputs.environment }}
        steps:
            - name: guess environment
              id: guess_env
              shell: bash
              run: |- 
                if [ ${{ github.ref_name }} = "integration" ]; then
                    echo "integration"
                    echo 'environment=integration' >> "$GITHUB_OUTPUT"
                elif [ ${{ github.ref_name }} = "staging" ]; then
                    echo "staging"
                    echo 'environment=staging' >> "$GITHUB_OUTPUT"
                elif [[ ${{ github.ref_name }} = "production" ]]; then
                    echo "production"
                    echo 'environment=production' >> "$GITHUB_OUTPUT"
                else
                    exit 1
                fi

    infrastructure_cd:
        needs: [guess_env]
        if: github.event_name == 'push' && contains(fromJSON('["integration", "staging", "production"]'), github.ref_name)
        uses: ./.github/workflows/infrastructure_cd.yaml
        permissions: 
            pull-requests: 
                write
        with:
            root_module_path: './infrastructure/${{ needs.guess_env.outputs.environment }}'