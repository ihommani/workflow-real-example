name: Create workloads new releases
run-name: ${{ github.actor }} triggered a release creation

# && workflow dispatch, on main branch only. Maybe not. --> if only push on main, then fuse this with '0_workloads_main_flow' or not for separation of concerns
on:
    push: 
        branches: 
            - main
        paths: 
            - frontend/**
            - backend/**
            - frontend/CHANGELOG.md
            - backend/CHANGELOG.md



jobs:

    release: 
        permissions:
            contents: write
            pull-requests: write
        runs-on: ubuntu-22.04
        outputs:
            release_created: ${{ steps.release.outputs.release_created }}
            tag_name: ${{ steps.release.outputs.tag_name }}
        steps:

            - uses: googleapis/release-please-action@v4
              id: release
              with:
                token: ${{ github.token }}

            - uses: actions/checkout@v4
  
    collect_env_variables_of_interest: # TODO: to change with expose_var
      if: needs.release.outputs.frontend--release_created || needs.release.outputs.backend--release_created
      needs: [release]
      uses: ./.github/workflows/_get_env_var_of_interest.yaml
      with:
        environment: integration


    create_release_package:
        if: needs.release.outputs.frontend--release_created || needs.release.outputs.backend--release_created
        needs: [collect_env_variables_of_interest, release]
        uses: ./.github/workflows/create_release_package.yaml
        with:
            next_release_version: ${{ needs.release.outputs.tag_name }}
            project_id: ${{ needs.collect_env_variables_of_interest.outputs.project_id }}
            repository_id: ${{ needs.collect_env_variables_of_interest.outputs.repository_id }}
            workload_identity_provider: ${{ needs.collect_env_variables_of_interest.outputs.workload_identity_provider }}
            service_account_to_impersonate: ${{ needs.collect_env_variables_of_interest.outputs.service_account_to_impersonate }}
            region: ${{ needs.collect_env_variables_of_interest.outputs.region }}