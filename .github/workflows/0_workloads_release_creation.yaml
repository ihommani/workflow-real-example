name: Create workloads new releases
run-name: ${{ github.actor }} triggered a release creation

# https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onpull_requestpull_request_targetbranchesbranches-ignore
on:
    pull_request:
        branches: 
            - release 
    push: 
        branches: 
            - release

jobs:
    # control_pull_request_reference: # TODO fix
    #     if: github.event_name == 'pull_request'
    #     runs-on: ubuntu-22.04
    #     steps:
    #         - name: reference name is main
    #           id: ref_name_main
    #           run: |-
    #             echo "${{ github.ref_name }}" 
    #             [ ${{ github.ref_name }} != main ] && exit 1

    collect_env_variables_of_interest:
      if: github.event_name == 'push'
      uses: ./.github/workflows/_get_env_var_of_interest.yaml
      with:
        environment: integration

    compute_next_release_version:
        if: github.event_name == 'push'
        runs-on: ubuntu-22.04
        outputs:
            next_release_version: ${{ steps.compute_next_version.outputs.next }}
        steps:
        # compute and set the version tag vx.y.z. get the commit message content to decide the computation
        # https://github.com/ietf-tools/semver-action?tab=readme-ov-file#example-workflow
        - name: Compute next version
          id: compute_next_version
          uses: ietf-tools/semver-action@v1 # TODO: compare with https://github.com/googleapis/release-please-action?tab=readme-ov-file
          with:
            token: ${{ github.token }}
            branch: release

    create_release_package:
        if: github.event_name == 'push'
        needs: [collect_env_variables_of_interest, compute_next_release_version]
        uses: ./.github/workflows/create_release_package.yaml
        with:
            next_release_version: ${{ needs.compute_next_release_version.outputs.next_release_version }}
            project_id: ${{ needs.collect_env_variables_of_interest.outputs.project_id }}
            repository_id: ${{ needs.collect_env_variables_of_interest.outputs.repository_id }}
            workload_identity_provider: ${{ needs.collect_env_variables_of_interest.outputs.workload_identity_provider }}
            service_account_to_impersonate: ${{ needs.collect_env_variables_of_interest.outputs.service_account_to_impersonate }}
            region: ${{ needs.collect_env_variables_of_interest.outputs.region }}

    create_release_metadata:
        if: github.event_name == 'push'
        needs: [create_release_package, compute_next_release_version]
        uses: ./.github/workflows/create_release_meta.yaml
        with: 
            next_release_version: ${{ needs.compute_next_release_version.outputs.next_release_version }}