name: Workload deployment
run-name: '${{ github.actor }} triggers workload deployment'


on: 
    workflow_call: # TODO : set the environemnt as an input.along with repository id and so on. 
      inputs:
        environment: 
          description: The context where the deployment occurs
          required: true
          type: string


# matrix strategy: one cloud_run_deployment job per app/service folder (each one contains a Dockerfile which was build as an image with the name of the parent folder)
# "deviner" le nom des services Ã  associer aux images existantes
jobs:


  list_docker_file_path:
    runs-on: ubuntu-22.04
    outputs:
      docker_file_path: ${{ steps.tes.outputs.test }}
    steps:
      - name: test
        run: echo "listgin Docker*"

  deploy_workload:
    needs: list_docker_file_path
    strategy:
      matrix:
        file_paths: ${{ needs.list_docker_file_path.outputs.docker_file_path }}
    uses: ./github/workflows/_cloudrun_deployment.yaml


    # list all the services name --> we take the assumption that there is only 2 service : frontend and backend
    # whatever happens, we deploy on the current sha1
    # we have as env variable FRONTEND_SERVICE_NAME, BACKEND_SERVICE_NAME

    # list all the jobs name --> can be guessed from the DOcker file name. But once again it's tricky. Better to let 
    # for each list, do the matrix strategy for each service or job
