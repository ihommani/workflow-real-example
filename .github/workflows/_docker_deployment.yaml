name: Docker integration
run-name: "${{ github.actor }} run Docker integration"

on:
    workflow_call:
        inputs:
            dockerfile-path:
                description: "Path of the considered dockerfile"
                type: string
                required: true
            build-image:
                description: "Do we need to build the image ?"
                type: boolean
                required: false
                default: false

                # if build image is false we still need to upload the tag using gcloud container images add-tag on latest with the current sha1 to the latest tag
                # https://github.com/google-github-actions/setup-gcloud

jobs:
    lint-dockerfile:
        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v3
            - uses: hadolint/hadolint-action@v3.1.0
              with:
                  dockerfile: ${{ inputs.dockerfile-path }}

    image-build:
        runs-on: ubuntu-22.04
        steps:

        - name: Checkout
          id: checkout
          uses: actions/checkout@v4

        - name: Set up QEMU
          id: set-up-qemu
          uses: docker/setup-qemu-action@v3

        - name: Set up Docker Buildx
          id: set-up-docker-buildx
          uses: docker/setup-buildx-action@v3

        - name: extract dockerfile dirname
          id: dockerfile-dirname
          run: echo "dirname=$(dirname ${{ inputs.dockerfile-path }})" >> "$GITHUB_OUTPUT"

        - name: Image name
          id: infer-image-name
          run: |
            image_name=$(cut -d "_" basename $${{ inputs.dockerfile-path }} -f 2)
            echo "image_name=$image_name" >> $GITHUB_OUTPUT

        - name: Build
          id: image-build
          uses: docker/build-push-action@v5
          with:
              context: ./${{ steps.dockerfile-dirname.outputs.dirname }} # TODO: a script should deduce the context path from the dockerfile path
              file: ${{ inputs.dockerfile-path }}
              tags: name/app:latest,name/app:1.0.0
              push: false
              #push: true


      # if branch is main then --> nope. The decision to push is not only on dockerfile modification. It's code source, dockerfile, env, ...
      # so it's better to set inputs to decide if we push or not, with what artifactory and which tags to set (tag latest is to move on the most recent image push).
      # give the possibility to just set a tag and not push a new image version --> we always do that
      # infer the image name from the Docker file or the folder it comes from 
      # authenticate to google (env var from environment) --> main corresponds to integration env and release to staging and production: we don't care. we associate branch to env and event. Environemnt are associated to env variable with the needed value. 
      # Push to artifactory (env var from environment ? ) tag being the commit SHA1 (in fact all the lastest images should be tagged with the new SHA1. Ease the reasonning on TF deployment)
